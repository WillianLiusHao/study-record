(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{226:function(t,s,a){"use strict";a.r(s);var r=a(6),i=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" JS")]),t._v(" "),s("h2",{attrs:{id:"原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),s("h2",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("h2",{attrs:{id:"this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),s("p",[t._v("this 指向的是函数执行时的上下文，具体指向哪个对象，取决于函数的调用方式。")]),t._v(" "),s("ul",[s("li",[t._v("如果是作为对象的方法调用，this 指向该对象\n如果是作为普通函数调用，this 指向全局对象（浏览器中是 window，Node.js 中是 global）")]),t._v(" "),s("li",[t._v("如果是使用 call、apply、bind 等方法，this 指向第一个参数传入的对象")]),t._v(" "),s("li",[t._v("如果是箭头函数，this 指向定义时所在的上下文，而不是执行时的上下文")])]),t._v(" "),s("h2",{attrs:{id:"es6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" es6")]),t._v(" "),s("h3",{attrs:{id:"_1-箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-箭头函数"}},[t._v("#")]),t._v(" 1. 箭头函数")]),t._v(" "),s("ul",[s("li",[t._v("不能作构造函数")]),t._v(" "),s("li",[t._v("this 指向：就是定义时所在的对象，而不是使用时所在的对象")]),t._v(" "),s("li",[t._v("没有 arguments 对象")])]),t._v(" "),s("h3",{attrs:{id:"_2-for-of-for-in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-for-of-for-in"}},[t._v("#")]),t._v(" 2. for...of / for...in")]),t._v(" "),s("ul",[s("li",[t._v("for...of 遍历键值(需要是有迭代器的，普通对象没有，可以加上 length并转成类数组)")]),t._v(" "),s("li",[t._v("for...in 遍历键名(数字使用则是下标)")])])])}),[],!1,null,null,null);s.default=i.exports}}]);