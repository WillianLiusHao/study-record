(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{165:function(t,s,a){t.exports=a.p+"assets/img/change-cipher-spec.3d709b69.png"},193:function(t,s,a){t.exports=a.p+"assets/img/cert.70b1beb7.png"},194:function(t,s,a){t.exports=a.p+"assets/img/cert2.ab900644.png"},195:function(t,s,a){t.exports=a.p+"assets/img/Diffie-Hellman_Key_Exchange.f1668aa3.svg"},196:function(t,s,a){t.exports=a.p+"assets/img/myxs.dea5907d.png"},197:function(t,s,a){t.exports=a.p+"assets/img/rsa-handshake.2f8917fe.png"},198:function(t,s,a){t.exports=a.p+"assets/img/tls-handshake.8b407d83.png"},199:function(t,s,a){t.exports=a.p+"assets/img/clienthello.778e8409.png"},200:function(t,s,a){t.exports=a.p+"assets/img/serverhello.08c5e84e.png"},201:function(t,s,a){t.exports=a.p+"assets/img/certificate.2f1fd20d.png"},202:function(t,s,a){t.exports=a.p+"assets/img/server-hello-done.0a60d7ba.png"},203:function(t,s,a){t.exports=a.p+"assets/img/encrypted-handshake-message.916b3516.png"},253:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),s("h2",{attrs:{id:"_1-https-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-https-是什么"}},[t._v("#")]),t._v(" 1. HTTPS 是什么")]),t._v(" "),s("h3",{attrs:{id:"_1-1-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-概念"}},[t._v("#")]),t._v(" 1.1 概念")]),t._v(" "),s("p",[t._v("HTTPS 是在 HTTP 的基础上，利用 "),s("code",[t._v("SSL/TLS")]),t._v(" 加密数据包。")]),t._v(" "),s("p",[t._v("HTTP 的风险和对策")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("风险")]),t._v(" "),s("th",[t._v("对策")]),t._v(" "),s("th",[t._v("方法")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("信息窃听")]),t._v(" "),s("td",[t._v("信息加密")]),t._v(" "),s("td",[t._v("对称加密 AES")])]),t._v(" "),s("tr",[s("td",[t._v("密钥传递")]),t._v(" "),s("td",[t._v("密钥协商")]),t._v(" "),s("td",[t._v("非对称加密 (RSA和ECC)")])]),t._v(" "),s("tr",[s("td",[t._v("信息篡改")]),t._v(" "),s("td",[t._v("完整性校验")]),t._v(" "),s("td",[t._v("散列算法（md5和SHA）")])]),t._v(" "),s("tr",[s("td",[t._v("身份冒充")]),t._v(" "),s("td",[t._v("CA权威认证")]),t._v(" "),s("td",[t._v("散列算法（md5和SHA）+ RSA 签名")])])])]),t._v(" "),s("h3",{attrs:{id:"_1-2-ssl-tls-王老吉和加多宝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-ssl-tls-王老吉和加多宝"}},[t._v("#")]),t._v(" 1.2 SSL / TLS （王老吉和加多宝）")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("https     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  http  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SSL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("     风险      目的\n  http  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   信息窃听  信息加密\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("    信息篡改  数据完整性\ntls"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ssl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   信息劫持  身份验证\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("     \n  tcp   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-加密"}},[t._v("#")]),t._v(" 2 加密")]),t._v(" "),s("p",[t._v("SSL/TLS 三类算法作用")]),t._v(" "),s("ul",[s("li",[t._v("非对称加密：身份验证，秘钥协商")]),t._v(" "),s("li",[t._v("对称加密：信息加密")]),t._v(" "),s("li",[t._v("散列算法：完整校验")])]),t._v(" "),s("h3",{attrs:{id:"_2-1-对称加密-aes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-对称加密-aes"}},[t._v("#")]),t._v(" 2.1 对称加密 AES")]),t._v(" "),s("p",[s("strong",[t._v("AES")])]),t._v(" "),s("ul",[s("li",[t._v("aes-128-ecb")]),t._v(" "),s("li",[t._v("aes-128-cbc")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" crypto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crypto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key：密钥   iv：盐")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encrypt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cipher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" crypto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCipheric")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aes-128-cbc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  cipher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cipher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("final")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出16进制字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decrypt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cipher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" crypto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCipheric")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aes-128-cbc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  cipher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hec'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加16进制数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cipher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("final")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出utf8字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-2-非对称加密-rsa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-非对称加密-rsa"}},[t._v("#")]),t._v(" 2.2 非对称加密 RSA")]),t._v(" "),s("p",[s("strong",[t._v("公钥加密私钥解，私钥加密公钥解")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("非对称加密的核心："),s("code",[t._v("单向函数")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("RSA")]),t._v("（原始数据m, 加密数据c）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("公钥（e,N）已知，加密过程")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("m ^ e % N = c")])]),t._v(" "),s("li",[t._v("例子：5 ^ 7 % 33 = 14")])])]),t._v(" "),s("li",[s("p",[t._v("私钥（d,N）解密过程")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("c ^ d % N = m")])]),t._v(" "),s("li",[t._v("例子：14 ^ 3 % 33 = 5")])])])])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("非对称的难点在于，如何通过公钥(e, N) 算出私钥 (d, N)")]),t._v("，计算过程如下：")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("N")]),t._v("：已知，且为 2个质数(p,q)的乘积，即 "),s("code",[t._v("p * q = N")]),t._v(" (分解一个数成2个质数乘积是数学上的难题)")]),t._v(" "),s("li",[s("strong",[t._v("欧拉积 FN")]),t._v("："),s("code",[t._v("FN = (p-1)*(q-1)")])]),t._v(" "),s("li",[t._v("最后通过如下公式找到密钥的关键 "),s("strong",[t._v("d")]),t._v("："),s("code",[t._v("e * d % FN == 1")])])]),t._v(" "),s("h3",{attrs:{id:"_2-3-哈希-md5-sha256"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-哈希-md5-sha256"}},[t._v("#")]),t._v(" 2.3 哈希 MD5/SHA256")]),t._v(" "),s("p",[t._v("特点")]),t._v(" "),s("ol",[s("li",[t._v("不同输入有不同输出")]),t._v(" "),s("li",[t._v("单向")]),t._v(" "),s("li",[t._v("长度固定")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("hash类型")]),t._v(" "),s("th",[t._v("md5")]),t._v(" "),s("th",[t._v("sha256")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("长度")]),t._v(" "),s("td",[t._v("32")]),t._v(" "),s("td",[t._v("64")])]),t._v(" "),s("tr",[s("td",[t._v("加盐")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("√")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-4-数字签名-sha256-rsa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-数字签名-sha256-rsa"}},[t._v("#")]),t._v(" 2.4 数字签名 SHA256 RSA")]),t._v(" "),s("ul",[s("li",[t._v("作用："),s("strong",[t._v("验证数据完整性 / 认证发送者身份")])]),t._v(" "),s("li",[t._v("基本原理："),s("strong",[t._v("私钥签名，公钥验证")])]),t._v(" "),s("li",[t._v("具体流程\n"),s("ul",[s("li",[t._v("发送者用 "),s("code",[t._v("hash算法")]),t._v(" 对要传递的信息进行摘要，生成 "),s("code",[t._v("数字指纹A")])]),t._v(" "),s("li",[t._v("发送者使用自己的 "),s("code",[t._v("私钥")]),t._v(" 对数字指纹进行加密,形成 "),s("code",[t._v("数字签名")])]),t._v(" "),s("li",[t._v("发送者将 "),s("code",[t._v("消息")]),t._v("和"),s("code",[t._v("数字签名")]),t._v(" 一同发送给接收者")]),t._v(" "),s("li",[t._v("接收者使用发送者 "),s("code",[t._v("公钥")]),t._v(" 进行解密，得到 "),s("code",[t._v("数字指纹A")]),t._v("（信息的hash值）")]),t._v(" "),s("li",[t._v("接收者使用 "),s("code",[t._v("hash算法")]),t._v(" 接收到的信息进行摘要，生成 "),s("code",[t._v("数字指纹B")])]),t._v(" "),s("li",[t._v("接收者比对 "),s("code",[t._v("A和B")]),t._v(" ，如果一致，则验证了 "),s("code",[t._v("数据的完整性")]),t._v(" 及 "),s("code",[t._v("发送者的真实性")])])])]),t._v(" "),s("li",[t._v("实现")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" generateKeyPairSync"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createSign"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createVerify "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crypto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 数字签名和验签\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成密钥对")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rsa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateKeyPairSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rsa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("modulusLength")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("publicKeyEncoding")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'spki'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pem'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// base64 格式")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("privateKeyEncoding")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pkcs8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pem'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cipher")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aes-256-cbc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("passphrase")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'passphrase'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 私钥密码")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 文件签名*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建签名实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" signObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rsa-sha256'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 放入文件内容")]),t._v("\nsignObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 私钥进行签名，输出16进制（hex ）字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sign "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" signObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" rsa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("privateKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pem'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("passphrase")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'passphrase'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 验签 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" verifyObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVerify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rsa-sha256'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nverifyObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isValid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" verifyObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rsa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("publicKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sign"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-5-数字证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-数字证书"}},[t._v("#")]),t._v(" 2.5 数字证书")]),t._v(" "),s("ul",[s("li",[t._v("目的\n"),s("ul",[s("li",[t._v("认证 "),s("strong",[t._v("公钥持有者的身份")]),t._v(",防止第三方冒充")])])]),t._v(" "),s("li",[t._v("内容\n"),s("ul",[s("li",[t._v("公钥")]),t._v(" "),s("li",[t._v("持有者信息")]),t._v(" "),s("li",[t._v("证书认证机构（CA）的信息")]),t._v(" "),s("li",[t._v("证书有效期")]),t._v(" "),s("li",[t._v("...")])])])]),t._v(" "),s("p",[s("strong",[t._v("签发和验证流程")]),t._v(" "),s("img",{attrs:{src:a(193),alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("CA 签发证书")]),t._v("，如上图左边部分：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("首先 CA 会把持有者的公钥、用途、颁发者、有效时间等信息打成一个包，然后对这些信息进行 Hash 计算，得到一个 Hash 值")])]),t._v(" "),s("li",[s("p",[t._v("然后 CA 会使用自己的私钥将该 Hash 值加密，生成 "),s("code",[t._v("Certificate Signature")]),t._v("，也就是 CA 对证书做了签名")])]),t._v(" "),s("li",[s("p",[t._v("最后将 Certificate Signature 添加在文件证书上，形成数字证书")])])])]),t._v(" "),s("li",[s("p",[t._v("客户端 "),s("strong",[t._v("校验服务端的数字证书")]),t._v(" 的过程，如上图右边部分")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("首先客户端会使用同样的 Hash 算法获取该证书的 Hash 值 H1")])]),t._v(" "),s("li",[s("p",[t._v("通常浏览器和操作系统中集成了 CA 的公钥信息，浏览器收到证书后可以使用 CA 的公钥解密 Certificate Signature 内容，得到一个 Hash 值 H2")])]),t._v(" "),s("li",[s("p",[t._v("最后比较 H1 和 H2，如果值相同，则为可信赖的证书，否则则认为证书不可信")])])])])]),t._v(" "),s("p",[s("strong",[t._v("全流程及具体字段")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(194),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-6-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-算法"}},[t._v("#")]),t._v(" 2.6 算法")]),t._v(" "),s("p",[s("strong",[t._v("Diffie-Hellman 算法(DH算法)")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("特点：双方都不需要告知对方自己的秘钥情况下，协商一个公共的秘钥出来")])]),t._v(" "),s("li",[s("p",[t._v("使用场景：协商密钥，计算对称加密的秘钥")])]),t._v(" "),s("li",[s("p",[t._v("图解")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(195),alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("算法数学原理("),s("code",[t._v("离散对数")]),t._v(")")])]),t._v(" "),s("div",{staticClass:"language-JS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设 p=2, a=3, b=4, N=10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a,b 是私钥，各自保存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 底数p，模N 是公开参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用 私钥a 生成 公钥A")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用 私钥b 生成 公钥B")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" AcommonK "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 公钥B和私钥a计算公共密钥 commonKey = 6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" BcommonK "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 公钥A和私钥b计算公共密钥 commonKey = 6")]),t._v("\n")])])]),s("ul",[s("li",[t._v("代码实现")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Diffie-Hellman")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createDiffieHellman "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crypto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 客户端")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDiffieHellman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("512")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" clientKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateKeys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取素数 p")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" generator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGenerator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// N")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDiffieHellman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" generator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" serverKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateKeys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// B")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成私钥")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client_secret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeSecret")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serverKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server_secret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeSecret")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client_secret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" server_secret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("ECDHE 算法")])]),t._v(" "),s("p",[t._v("ECDHE 算法是在 DHE 算法的基础上利用了 "),s("code",[t._v("ECC 椭圆曲线")]),t._v("特性，可以用更少的计算量计算出公钥，以及最终的会话密钥。")]),t._v(" "),s("p",[t._v("小红和小明使用 ECDHE 密钥交换算法的过程：")]),t._v(" "),s("ul",[s("li",[t._v("双方事先确定好使用 "),s("code",[t._v("哪种椭圆曲线")]),t._v("，和曲线上的 "),s("code",[t._v("基点 G")]),t._v("，这两个参数都是公开的；")]),t._v(" "),s("li",[t._v("双方各自随机生成一个随机数作为"),s("code",[t._v("私钥d")]),t._v("，并与 "),s("code",[t._v("基点 G")]),t._v(" 相乘得到"),s("code",[t._v("公钥Q（Q = dG）")]),t._v("，此时小红的公私钥为 Q1 和 d1，小明的公私钥为 Q2 和 d2；")]),t._v(" "),s("li",[t._v("双方交换各自的公钥，最后小红计算点（x1，y1） = d1Q2，小明计算点（x2，y2） = d2Q1，由于椭圆曲线上是可以满足乘法交换和结合律，所以 d1Q2 = d1d2G = d2d1G = d2Q1 ，因此双方的 x 坐标是一样的，所以它是共享密钥，也就是会话密钥。")])]),t._v(" "),s("p",[t._v("这个过程中，双方的私钥都是随机、临时生成的，都是不公开的，即使根据公开的信息（椭圆曲线、公钥、基点 G）也是很难计算出椭圆曲线上的离散对数（私钥）。")]),t._v(" "),s("h2",{attrs:{id:"_3-密钥协商"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-密钥协商"}},[t._v("#")]),t._v(" 3. 密钥协商")]),t._v(" "),s("h3",{attrs:{id:"常见秘钥交换算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见秘钥交换算法"}},[t._v("#")]),t._v(" 常见秘钥交换算法")]),t._v(" "),s("ul",[s("li",[t._v("RSA")]),t._v(" "),s("li",[s("strong",[t._v("ECDHE(目前主流)")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(196),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_4-tls-握手过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-tls-握手过程"}},[t._v("#")]),t._v(" 4. "),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/U9SRLE7jZTB6lUZ6c8gTKg",target:"_blank",rel:"noopener noreferrer"}},[t._v("TLS 握手过程"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"tls-rsa-握手-反复阅读熟记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-rsa-握手-反复阅读熟记"}},[t._v("#")]),t._v(" TLS-RSA 握手(反复阅读熟记)")]),t._v(" "),s("p",[s("img",{attrs:{src:a(197),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"tls-ecdhe-握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-ecdhe-握手"}},[t._v("#")]),t._v(" TLS-ECDHE 握手")]),t._v(" "),s("p",[s("img",{attrs:{src:a(198),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_5-tls-握手过程详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-tls-握手过程详解"}},[t._v("#")]),t._v(" 5. TLS 握手过程详解")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("TLS 四次握手")]),t._v(" "),s("th",[t._v("RSA")]),t._v(" "),s("th",[t._v("ECDHE")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("第一次")]),t._v(" "),s("td",[t._v("Client Hello")]),t._v(" "),s("td",[t._v("Client Hello")])]),t._v(" "),s("tr",[s("td",[t._v("第二次")]),t._v(" "),s("td",[t._v("Server Hello"),s("br"),t._v("Server Certificate"),s("br"),t._v("Server Hello Done")]),t._v(" "),s("td",[t._v("Server Hello"),s("br"),t._v("Server Certificate"),s("br"),s("strong",[t._v("Server Key Exchange")]),s("br"),t._v("Server Hello Done")])]),t._v(" "),s("tr",[s("td",[t._v("第三次")]),t._v(" "),s("td",[t._v("Client Key Exchange"),s("br"),t._v("Change Cipher Spec"),s("br"),t._v("Encrypted Handshake Message（Finishd）")]),t._v(" "),s("td",[t._v("Client Key Exchange"),s("br"),t._v("Change Cipher Spec"),s("br"),t._v("Encrypted Handshake Message（Finishd）")])]),t._v(" "),s("tr",[s("td",[t._v("第四次")]),t._v(" "),s("td",[t._v("Change Cipher Spec"),s("br"),t._v("Encrypted Handshake Message（Finishd）")]),t._v(" "),s("td",[t._v("Change Cipher Spec"),s("br"),t._v("Encrypted Handshake Message（Finishd）")])])])]),t._v(" "),s("ul",[s("li",[t._v("总结\n"),s("ul",[s("li",[t._v("RSA 密钥协商算法「不支持」前向保密，ECDHE 密钥协商算法「"),s("strong",[t._v("支持")]),t._v("」"),s("strong",[t._v("前向保密")]),t._v("；")]),t._v(" "),s("li",[t._v("使用了 RSA 密钥协商算法，TLS 完成"),s("strong",[t._v("四次握手后，才能进行应用数据传输")]),t._v("，而对于 ECDHE 算法，客户端可以不用等服务端的最后一次 TLS 握手，就可以提前发出加密的 HTTP 数据，节省了一个消息的往返时间（这个是 RFC 文档规定的，具体原因文档没有说明，所以这点我也不太明白）；")]),t._v(" "),s("li",[t._v("使用 ECDHE， 在 TLS 第 "),s("strong",[t._v("2 次握手中")]),t._v("，会出现服务器端发出的「"),s("strong",[t._v("Server Key Exchange")]),t._v("」消息，而 RSA 握手过程没有该消息；")])])])]),t._v(" "),s("p",[t._v("以下以 RSA 握手过程进行详细解读")]),t._v(" "),s("h3",{attrs:{id:"_1-第一次握手-【client-hello】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一次握手-【client-hello】"}},[t._v("#")]),t._v(" 1. 第一次握手 【"),s("strong",[t._v("Client Hello")]),t._v("】")]),t._v(" "),s("p",[s("img",{attrs:{src:a(199),alt:""}})]),t._v(" "),s("p",[t._v("客户端打招呼，主要发送了 "),s("code",[t._v("TLS 版本号")]),t._v("、"),s("code",[t._v("支持的加密套件列表")]),t._v("、"),s("code",[t._v("客户端随机数（Client Random）")]),t._v("，该随机数最后会被服务端保留，这是 "),s("code",[t._v("生成对称加密秘钥")]),t._v(" 的材料之一")]),t._v(" "),s("h3",{attrs:{id:"_2-第二次握手-【server-hello-server-certificate-server-hello-done】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-第二次握手-【server-hello-server-certificate-server-hello-done】"}},[t._v("#")]),t._v(" 2. 第二次握手 【"),s("strong",[t._v("Server Hello + Server Certificate + Server Hello Done")]),t._v("】")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Server Hello")])]),t._v(" "),s("p",[t._v("当服务端收到客户端的【Client Hello】消息后，会确认(ACK) TLS 版本号是否支持，和从密码套件列表中选择一个密码套件，以及生成随机数 "),s("code",[t._v("Server Random")])]),t._v(" "),s("p",[t._v("接着，返回【"),s("strong",[t._v("Server Hello")]),t._v("】消息，消息里面有服务器确认的 "),s("code",[t._v("TLS 版本号")]),t._v("，也给出了"),s("code",[t._v("随机数（Server Random）")]),t._v("，然后从客户端的密码套件列表选择了一个"),s("code",[t._v("合适的密码套件")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(200),alt:""}})]),t._v(" "),s("p",[t._v("可以看到，服务端选择的密码套件是")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("“Cipher Suite"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS_RSA_WITH_AES_128_GCM_SHA256")]),t._v("”\n")])])]),s("p",[t._v("套件基本格式："),s("strong",[t._v("「密钥交换算法 + 签名算法 + 对称加密算法 + 摘要算法」")])]),t._v(" "),s("p",[t._v("上述套件的意思是")]),t._v(" "),s("ul",[s("li",[t._v("由于 WITH 单词只有一个 RSA，则说明握手时密钥交换算法和签名算法都是使用 RSA")]),t._v(" "),s("li",[t._v("握手后的通信使用 AES 对称算法，密钥长度 128 位，分组模式是 GCM")]),t._v(" "),s("li",[t._v("摘要算法 SHA256 用于消息认证和产生随机数；")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Server Certificate")])]),t._v(" "),s("p",[t._v("服务端为验证自己身份，发送 "),s("code",[t._v("Server Certificate")]),t._v(" 消息给客户端，信息内包含证书")]),t._v(" "),s("p",[s("img",{attrs:{src:a(201),alt:""}})])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Server Hello Done")])]),t._v(" "),s("p",[t._v("服务端告诉客户端，消息传递完毕，本次招呼完毕")]),t._v(" "),s("p",[s("img",{attrs:{src:a(202),alt:""}})])])]),t._v(" "),s("blockquote",[s("p",[t._v("二次握手中有几个关键事项，这里就不展开细讲了")]),t._v(" "),s("ol",[s("li",[t._v("客户端证书验证（见"),s("a",{attrs:{href:"#_2-5-%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6"}},[t._v("2.5 数字证书")]),t._v("）")]),t._v(" "),s("li",[t._v("证书链")])])]),t._v(" "),s("h3",{attrs:{id:"_3-第三次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-第三次握手"}},[t._v("#")]),t._v(" 3. 第三次握手")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Client Key Exchange")])]),t._v(" "),s("p",[t._v("客户端验证完证书，可信则继续往下走。客户端生成新的 "),s("code",[t._v("随机数(pre-master)")]),t._v(",用服务器的 RSA 公钥进行加密，通过 "),s("strong",[t._v("Client Key Exchange")]),t._v(" 消息传给服务端")]),t._v(" "),s("p",[s("img",{attrs:{src:a(165),alt:""}})]),t._v(" "),s("p",[t._v("服务端用 RSA 私钥解密，也得到了 pre-master")]),t._v(" "),s("p",[t._v("至此，双方共享了3个随机数：")]),t._v(" "),s("ul",[s("li",[t._v("Client Random")]),t._v(" "),s("li",[t._v("Server Random")]),t._v(" "),s("li",[t._v("pre-master")])]),t._v(" "),s("p",[t._v("双方基于3个随机数，生成会话秘钥 "),s("strong",[t._v("Master Secter（对称秘钥）")]),t._v("，用于后续的加密通讯")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Change Cipher Spec")])]),t._v(" "),s("p",[t._v("客户端通过 "),s("strong",[t._v("Change Cipher Spec")]),t._v(" 消息告诉服务端接下来开始切换加密协议，之后都使用对称加密进行发消息")]),t._v(" "),s("p",[s("img",{attrs:{src:a(165),alt:""}})])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Encrypted Handshake Message（Finishd）")])]),t._v(" "),s("p",[t._v("然后，客户端再发一个 "),s("strong",[t._v("Encrypted Handshake Message（Finishd）")]),t._v(" 消息，把之前所有发送的数据进行摘要，再用 "),s("code",[t._v("maste secret")]),t._v(" 对称秘钥进行加密，让服务端做验证，验证加密通信是否可用及 TLS 握手信息是否被 篡改过")]),t._v(" "),s("p",[s("img",{attrs:{src:a(203),alt:""}})])])]),t._v(" "),s("h3",{attrs:{id:"_4-第四次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-第四次握手"}},[t._v("#")]),t._v(" 4. 第四次握手")]),t._v(" "),s("p",[t._v("也是进行 "),s("strong",[t._v("Change Cipher Spec")]),t._v(" 和 "),s("strong",[t._v("Encrypted Handshake Message（Finishd）")]),t._v("，如果双方都验证加解密没问题，则握手正式完成")])])}),[],!1,null,null,null);s.default=e.exports}}]);