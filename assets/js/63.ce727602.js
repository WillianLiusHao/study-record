(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{221:function(t,s,a){"use strict";a.r(s);var n={__name:"notes",setup:t=>({__sfc:!0})},e=a(6),r=Object(e.a)(n,(function(){var t=this,s=t._self._c;t._self._setupProxy;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("ul",[s("li",[t._v("2022.02.21")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("阅读 vue3 源码 reactivity 包的依赖收集和更新的逻辑")])]),t._v(" "),s("li",[s("p",[t._v("网络安全相关知识: xss 和 csrf 等 (√)")])]),t._v(" "),s("li",[s("p",[t._v("回顾 浏览器缓存(重点是相应字段及其特点) (√)")]),t._v(" "),s("ul",[s("li",[t._v("cache-control: max-age/no-store/no-cache")]),t._v(" "),s("li",[t._v("expires: 时间戳")]),t._v(" "),s("li",[t._v("etag/if-none-match")]),t._v(" "),s("li",[t._v("last-modified/since-last-modified")])])]),t._v(" "),s("li",[s("p",[t._v("状态码 (√)")]),t._v(" "),s("ul",[s("li",[t._v("200: 成功")]),t._v(" "),s("li",[t._v("206: 断点续传，视频大文件上传")]),t._v(" "),s("li",[t._v("301: 永久")]),t._v(" "),s("li",[t._v("302: 临时")]),t._v(" "),s("li",[t._v("304: 协商")]),t._v(" "),s("li",[t._v("400: 请求参数错误")]),t._v(" "),s("li",[t._v("401: 无权访问")]),t._v(" "),s("li",[t._v("403: 拒接请求, 如需内网访问但是用了外网访问")]),t._v(" "),s("li",[t._v("404: 资源找不到")]),t._v(" "),s("li",[t._v("500: 服务器内部错误")]),t._v(" "),s("li",[t._v("504: 网关超时")])])]),t._v(" "),s("li",[s("p",[t._v("http 和 https 的区别/ http1.0 1.1 2.0 区别 (x)")])])]),t._v(" "),s("ul",[s("li",[t._v("2022.02.22")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("过一遍 TS 文档(https://ts.xcatliu.com/) (√)")]),t._v(" "),s("blockquote",[s("p",[t._v("基础")])]),t._v(" "),s("ul",[s("li",[t._v("类型断言 (值 as 类型 或 <类型>值)")]),t._v(" "),s("li",[t._v("泛型(T)")]),t._v(" "),s("li",[t._v("联合类型(|)")]),t._v(" "),s("li",[t._v("函数重载")])]),t._v(" "),s("blockquote",[s("p",[t._v("进阶")])]),t._v(" "),s("ul",[s("li",[t._v("类型别名 & 字符串字面量类型")]),t._v(" "),s("li",[t._v("类")]),t._v(" "),s("li",[t._v("接口")])])]),t._v(" "),s("li",[s("p",[t._v("复习 xss 和 csrf 等 (x)")])]),t._v(" "),s("li",[s("p",[t._v("http 和 https 的区别 / http1.0 1.1 2.0 区别 (x)")])]),t._v(" "),s("li",[s("p",[t._v("bind_call_apply 区别 (x)")])]),t._v(" "),s("li",[s("p",[t._v("位运算的原理及运用场景 (√)")]),t._v(" "),s("ul",[s("li",[t._v("(vue3 和 react 源码都有使用,判断节点类型)")]),t._v(" "),s("li",[t._v("权限控制 (|赋予权限, &权限校验)")])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.02.23")])]),t._v(" "),s("ol",[s("li",[t._v("webpack (√)\n"),s("ul",[s("li",[t._v("阅读文档，了解 plugin 运行机制及编写方法")]),t._v(" "),s("li",[t._v("vue-cli serve 插件(vue-cli-infinite-plugin 源码阅读)")])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.02")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("述职(P5-)")])]),t._v(" "),s("li",[s("p",[t._v("刷算法")]),t._v(" "),s("ul",[s("li",[t._v("dp: 打家劫舍、爬楼梯")])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.03")])]),t._v(" "),s("ol",[s("li",[t._v("刷算法\n"),s("ul",[s("li",[t._v("dp: 不同路径、买卖股票时机、剪绳子、跳跃游戏")])])]),t._v(" "),s("li",[t._v("复习 bind/call/apply 不同及实现 (√)")]),t._v(" "),s("li",[t._v("new 实现 (√)\n"),s("ul",[s("li",[t._v("新建对象 -> 原型链 -> 绑定 this -> 判断返回")])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.04")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器本地缓存 (√)")]),t._v(" "),s("ul",[s("li",[t._v("区别：大小、何时失效、和服务器的交互方式")]),t._v(" "),s("li",[t._v("cookie: 4kb、过期时间、会自动携带都服务器")]),t._v(" "),s("li",[t._v("localStorage: >= 5M、手动删除、不会")]),t._v(" "),s("li",[t._v("sessionStorage: >= 5M、页面关闭、不会")])])]),t._v(" "),s("li",[s("p",[t._v("深浅克隆 (√)")]),t._v(" "),s("ul",[s("li",[t._v("注意了解各种数据类型的存储方式，及如何判断")]),t._v(" "),s("li",[t._v("深克隆用递归")])])]),t._v(" "),s("li",[s("p",[t._v("函数柯里化 (√)")])]),t._v(" "),s("li",[s("p",[t._v("数据类型 (√)")]),t._v(" "),s("ul",[s("li",[t._v("基本(栈)\n"),s("ul",[s("li",[t._v("Number")]),t._v(" "),s("li",[t._v("String")]),t._v(" "),s("li",[t._v("Boolean")]),t._v(" "),s("li",[t._v("Null")]),t._v(" "),s("li",[t._v("Undefined")]),t._v(" "),s("li",[t._v("Symbol")]),t._v(" "),s("li",[t._v("BigInt")])])]),t._v(" "),s("li",[t._v("复杂(堆)\n"),s("ul",[s("li",[t._v("Object(Array, Function)")])])])])]),t._v(" "),s("li",[s("p",[t._v("事件委托")]),t._v(" "),s("ul",[s("li",[t._v("事件流三个阶段： 捕获阶段 -> 目标阶段 -> 冒泡阶段")]),t._v(" "),s("li",[t._v("使用 event.target 获取事件触发位置")])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.16")])]),t._v(" "),s("ol",[s("li",[t._v("cookie\n"),s("ul",[s("li",[t._v("相关字段\n"),s("ul",[s("li",[t._v("key")]),t._v(" "),s("li",[t._v("value")]),t._v(" "),s("li",[s("strong",[t._v("httpOnly")])]),t._v(" "),s("li",[s("strong",[t._v("sameSite")])]),t._v(" "),s("li",[t._v("path")]),t._v(" "),s("li",[t._v("domain")])])]),t._v(" "),s("li",[t._v("如何删除 cookie ？")])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.18")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("TS： keyof、typeof、Required、Partial、Pick")])]),t._v(" "),s("li",[s("p",[t._v("interface 和 type 区别")]),t._v(" "),s("ul",[s("li",[t._v("type 不可重复声明，合并只能使用 &")]),t._v(" "),s("li",[t._v("interface可重复声明，且自动合并")])])]),t._v(" "),s("li",[s("p",[t._v("万花筒的socket")])])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.27")])]),t._v(" "),s("ol",[s("li",[t._v("Pinia\n"),s("ul",[s("li",[t._v("createPinia")]),t._v(" "),s("li",[t._v("storeToRefs：把 store 暴露的数据转为响应式的")]),t._v(" "),s("li",[t._v("$patch：批量更新数据")])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.28")])]),t._v(" "),s("ol",[s("li"),t._v(" "),s("li",[t._v("npm run dev 发生了什么？")])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.29")])]),t._v(" "),s("ol",[s("li",[t._v("Pinia使用")]),t._v(" "),s("li",[t._v("持久化存储("),s("code",[t._v("pinia-plugin-persistedstate")]),t._v(")原理"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/index.ts")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPersistedState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("factoryOptions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// context 拿到当前 store 的上下文")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" persist "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         store\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("persist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         storage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factoryOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" _a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         beforeRestore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factoryOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beforeRestore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" _b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         afterRestore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factoryOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("afterRestore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" _c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factoryOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" _d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("serialize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stringify"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("deserialize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         paths "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" persist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boolean"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" persist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用外部的传入的 hook: beforeRestore 函数，并将 context 传给外部")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 外部定义的 beforeRestore 函数 可以对当前实例做修改")]),t._v("\n     beforeRestore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRestore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     \n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// !!! 每次注册当前插件的时候，会把 storage 中的所有数据 通过 $patch 批量存入 store")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fromStorage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" storage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fromStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n             store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$patch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deserialize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fromStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用外部的传入的 hook: afterRestore 函数，并将 context 传给外部")]),t._v("\n     afterRestore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterRestore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// !!! 订阅 vuex中的数据，每次store变化的时候，把新的数据存入 storage中")]),t._v("\n     store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_mutation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" toStore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("paths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" paths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n             storage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("serialize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("toStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("detached")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.03.30")])]),t._v(" "),s("ol",[s("li",[t._v("最大子数组和（no.53）")]),t._v(" "),s("li",[t._v("二叉树的中序遍历 (no.94)")])]),t._v(" "),s("ul",[s("li",[t._v("2022.04.28")])]),t._v(" "),s("ol",[s("li",[t._v("try catch 不可return阻止代码继续执行")]),t._v(" "),s("li",[t._v("axios 中的 request 中可通过 cancelToken 字段取消请求")]),t._v(" "),s("li",[s("strong",[t._v("对称二叉树")]),t._v(" （双指针同时移动）")]),t._v(" "),s("li",[s("strong",[t._v("二叉树的最大深度")]),t._v(" (递归，类似动态规划的思想，找出状态转移方程)")])]),t._v(" "),s("ul",[s("li",[t._v("2022.05.26")])]),t._v(" "),s("ol",[s("li",[t._v("npm run serve 的时候发生了什么？")])]),t._v(" "),s("ul",[s("li",[t._v("2022.06.02")])]),t._v(" "),s("ol",[s("li",[t._v("可选链操作符移动端有兼容性问题（ios >= 13.4）\n可通过babel 插件进行兼容处理")]),t._v(" "),s("li",[t._v("http 缓存\n"),s("ul",[s("li",[t._v("强缓存\n"),s("ul",[s("li",[t._v("Expires（http1.0）：绝对时间，时间戳")]),t._v(" "),s("li",[t._v("Cache-control（http1.1）：相对时间，秒")])])]),t._v(" "),s("li",[t._v("协商缓存")])])])]),t._v(" "),s("ul",[s("li",[t._v("2022.06.27")])]),t._v(" "),s("ol",[s("li",[t._v("uni-app 生命周期的选择，navigateTo 不会销毁原来的组件(选用"),s("code",[t._v("onHide")]),t._v(")，navigateBack 会销毁(选用"),s("code",[t._v("onUnload/onMounted")]),t._v(")")])]),t._v(" "),s("ul",[s("li",[t._v("2022.07.11")])]),t._v(" "),s("ol",[s("li",[t._v("node 启动浏览器，利用 "),s("code",[t._v("puppeteer")]),t._v(" 访问浏览器页面，并进行人为导出")]),t._v(" "),s("li",[t._v("并发请求处理，利用 queue 队列控制最大并发量（"),s("code",[t._v("重点是queue的实现逻辑，及on关键字实现事件监听")]),t._v("）")])]),t._v(" "),s("ul",[s("li",[t._v("2022.07.12")])]),t._v(" "),s("ol",[s("li",[t._v("关于循环中的异步函数\n"),s("ul",[s("li",[t._v("forEach 中不会等待异步任务的回调结果，而是直接获取到 undefined 的回调结果（即forEach是"),s("code",[t._v("并行")]),t._v("的，无法通过某个异步回调跳出循环）")]),t._v(" "),s("li",[t._v("for, for of 等是会等待异步回调的，（即是"),s("code",[t._v("串行")]),t._v("的，可通过本次循环的异步回调结果跳出循环）")])])])]),t._v(" "),s("ul",[s("li",[t._v("这里开始按周记录，便于周末回顾巩固相关知识点")])]),t._v(" "),s("p",[t._v("#- 2022.08.08 - 2022.08.14")]),t._v(" "),s("p",[s("strong",[t._v("知识点")])]),t._v(" "),s("ul",[s("li",[t._v("页面从输入URL到展示")])]),t._v(" "),s("p",[s("strong",[t._v("算法")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("滑动窗口")]),t._v(" "),s("ul",[s("li",[t._v("[x] "),s("a",{attrs:{href:""}},[t._v("5.最大不重复子串")])]),t._v(" "),s("li",[t._v("[x] "),s("a",{attrs:{href:"https://leetcode.cn/problems/minimum-size-subarray-sum/",target:"_blank",rel:"noopener noreferrer"}},[t._v("209.长度最小的子数组"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://github.com/labuladong/fucking-algorithm/blob/master/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E7%B3%BB%E5%88%97/LRU%E7%AE%97%E6%B3%95.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LRU 算法详解"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[t._v("二分法")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("深刻理解二叉树的遍历算法")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 二叉树遍历框架 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("TreeNode root")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前序遍历")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 中序遍历")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后序遍历")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("诸多常见算法其实都是树的遍历问题")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("前序遍历：先主逻辑、再递归")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("快排")]),t._v("：排序后（"),s("code",[t._v("主逻辑")]),t._v("）再进行("),s("code",[t._v("递归")]),t._v(")对左右区间排序")])])]),t._v(" "),s("li",[s("p",[t._v("后续遍历：先递归、再执行主逻辑")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("归并")]),t._v("：不断分区间（"),s("code",[t._v("递归")]),t._v("）再合并区间排序（"),s("code",[t._v("主逻辑")]),t._v("）")]),t._v(" "),s("li",[s("code",[t._v("分治")])]),t._v(" "),s("li",[s("code",[t._v("回溯")])])])])]),t._v(" "),s("p",[s("strong",[t._v("项目")])]),t._v(" "),s("ul",[s("li",[t._v("监控sdk")])]),t._v(" "),s("p",[t._v("#- 2022.08.15 - 2022.08.21")]),t._v(" "),s("p",[s("strong",[t._v("知识点")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("原型链、new、继承")])]),t._v(" "),s("li",[s("p",[t._v("[ ] eventloop、promise、nextTick")])]),t._v(" "),s("li",[s("p",[t._v("[ ] http缓存，js内存存放，垃圾回收机制")])])]),t._v(" "),s("p",[s("strong",[t._v("算法")])]),t._v(" "),s("ol",[s("li",[t._v("前缀和\n"),s("ul",[s("li",[t._v("[x] "),s("a",{attrs:{href:"https://leetcode.cn/problems/subarray-sum-equals-k/",target:"_blank",rel:"noopener noreferrer"}},[t._v("560.和为k的子数组"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[t._v("滑动窗口的框架及注意事项")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 框架")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slideWindow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 初始化左右指针，左闭右开，指向0")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 扩大窗口，直至满足条件 ")]),t._v("\n\tright "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 缩小窗口, 找到最小窗口，比较并更新")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("满足条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tleft"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" min"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tmin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reutrn：当right = arr.length-1，且left缩到最小的时候，返回最小窗口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("#- 2022.08.22 - 2022.08.26")]),t._v(" "),s("p",[s("strong",[t._v("知识点")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Vue3 响应式原理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("核心API："),s("code",[t._v("Effect")])]),t._v(" "),s("p",[t._v("简单来说我们所有模版（组件）最终都会被 effect 包裹 ，当数据发生变化时 Effect 会重新执行，所以 vuejs 中的响应式原理可以说是基于 effect 来实现的 。")]),t._v(" "),s("p",[t._v("当然这里你仅仅需要了解，最终组件是会编译成为一个个 effect ，当响应式数据改变时会触发 effect 函数重新执行从而更新渲染页面即可。")])])])])]),t._v(" "),s("p",[s("strong",[t._v("算法")])]),t._v(" "),s("p",[s("strong",[t._v("项目")])]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"https://github.com/WillianLiusHao/vite-plugin-generate-routes",target:"_blank",rel:"noopener noreferrer"}},[t._v("vite-plugin-generate-routes"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://github.com/WillianLiusHao/mini-webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("mini-webpack"),s("OutboundLink")],1)])])]),t._v(" "),s("p",[t._v("#- 2022.08.29 - 2022.09.02")]),t._v(" "),s("p",[s("strong",[t._v("知识点")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("webpack中配置loader的三种方式")]),t._v(" "),s("ul",[s("li",[t._v("绝对路径：直接用path.resolve写loader的绝对路径")]),t._v(" "),s("li",[t._v("resolveLoader.alias：定义单个loader的路径")]),t._v(" "),s("li",[t._v("resolveLoader.modules：定义所有loader查找目录（默认是node_modules）")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("pitch loader")]),t._v(" 的熔断效果")])])]),t._v(" "),s("p",[s("strong",[t._v("算法")])]),t._v(" "),s("p",[s("strong",[t._v("项目")])]),t._v(" "),s("ol",[s("li",[t._v("vite 源码学习")])]),t._v(" "),s("ul",[s("li",[t._v("[x] vite hmr 原理")]),t._v(" "),s("li",[t._v("[x] vite 启动原理")]),t._v(" "),s("li",[t._v("[x] vite 预构建原理？？？(好复杂)")])]),t._v(" "),s("p",[t._v("依赖预构建")]),t._v(" "),s("ul",[s("li",[t._v("why？\n"),s("ul",[s("li",[t._v("兼容：开发阶段中，vite会把所有的模块视为 ES 模块，所以需要先将CommonJS 和 UMD 发布的包转成 ESM")]),t._v(" "),s("li",[t._v("性能： Vite 将有许多内部模块的 ESM 依赖关系转换为单个模块，以提高后续页面加载性能。")])])]),t._v(" "),s("li",[t._v("when？\n"),s("ul",[s("li",[t._v("首次会进行依赖预构建，构建的依赖会存到 "),s("code",[t._v("node_modules/.vite")]),t._v(" 中")]),t._v(" "),s("li",[t._v("当依赖发生变化时，如\n"),s("ul",[s("li",[t._v("package.json 的 dependencies 列表")]),t._v(" "),s("li",[t._v("各类包管理器的 lockfile，package-lock.json / yarn.lock")]),t._v(" "),s("li",[t._v("vite.config.js 配置过的")])])])])]),t._v(" "),s("li",[t._v("缓存\n"),s("ul",[s("li",[t._v("构建后的依赖以 HTTP 头 "),s("code",[t._v("max-age=31536000,immutable")]),t._v(" 强缓存")])])])]),t._v(" "),s("p",[t._v("#- 2022.09.26 - 2022.09.30")]),t._v(" "),s("p",[s("strong",[t._v("知识点")])]),t._v(" "),s("p",[s("strong",[t._v("算法")])]),t._v(" "),s("p",[s("strong",[t._v("项目")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("monitor-demo")]),t._v(" "),s("ul",[s("li",[t._v("FP / FCP / LCP / CLS 的含义及获取方法")])])]),t._v(" "),s("li",[s("p",[t._v("发布一个虚拟列表组件")])])]),t._v(" "),s("p",[t._v("#- 2022.10.31 - 2022.11.04")]),t._v(" "),s("p",[s("strong",[t._v("知识点")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Promise")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("all 和 allsettled 区别")]),t._v(" "),s("p",[t._v("all 只要一个出错了就返回错误的状态，而allsettled 会将所有的状态（成功和失败）都返回")])])])])]),t._v(" "),s("p",[s("strong",[t._v("算法")])]),t._v(" "),s("p",[s("strong",[t._v("项目")])])])}),[],!1,null,null,null);s.default=r.exports}}]);