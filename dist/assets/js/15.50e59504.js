(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{198:function(t,v,e){"use strict";e.r(v);var _=e(6),a=Object(_.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"大纲"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大纲"}},[t._v("#")]),t._v(" 大纲")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("一、Vue 基础")])]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("Vue 权限管理")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("双向绑定的使用和原理")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("nextTick")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("组件通讯的方式")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("v-for 和 v-if 的优先级")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"6"}},[v("li",[t._v("computed 和 watch 区别")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"7"}},[v("li",[t._v("keep-alive 的理解，如何实现，缓存的是什么？")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"8"}},[v("li",[t._v("vue 性能优化")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"9"}},[v("li",[t._v("单页应用的理解")])])])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("二、生命周期")])]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("说一下Vue 生命周期")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("created 和 mounted 的区别")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("哪个生命周期发请求")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("keep-alive 与 生命周期")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("父子声明周期顺序")])])])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("三、原理题")])]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("响应式原理")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("模板渲染原理")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("vdom 理解")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("diff 过程")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("key 的作用")])])])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("四、vue-router")])]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("路由懒加载")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[v("strong",[t._v("路由的history 和 hash 模式？区别？实现原理？")])])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("前端路由的理解")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("路由守卫")])])])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("五、vuex")])]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("action 和 mutation 的区别")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("五大模块")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("刷新后 vuex 状态丢失怎么办？")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"4"}},[v("li",[t._v("如何监听 vuex 的状态变化")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"5"}},[v("li",[t._v("你觉得 vuex 有什么缺点")])])])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("六、vue3.0")])]),t._v(" "),v("ul",[v("li",[v("ol",[v("li",[t._v("vue3 优化")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"2"}},[v("li",[t._v("vue3 为什么用 proxy 代替 Object.defineProperty？")])])]),t._v(" "),v("li",[v("ol",{attrs:{start:"3"}},[v("li",[t._v("ref 和 reactive 的区别")])])])])])]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"一、vue-基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、vue-基础"}},[t._v("#")]),t._v(" 一、Vue 基础")]),t._v(" "),v("h4",{attrs:{id:"_1-computed-和-watch-区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-computed-和-watch-区别"}},[t._v("#")]),t._v(" 1. Computed 和 Watch 区别")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("区别")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("watch")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("computed")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("用法上")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("根据响应式数据作出相应的变化")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("依赖响应式数据的变化而变化，生成了一个新的响应式数据")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("特点上")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("无缓存")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v("有缓存")]),t._v("，无副作用")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("场景上")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("可"),v("code",[t._v("异步")]),t._v("，消耗较大")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("用于频繁变动的数据")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("原理上")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("相当于属性 "),v("code",[t._v("setter")]),t._v(" 的回调函数")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("相当于设置了属性的 "),v("code",[t._v("getter")])])])])]),t._v(" "),v("h4",{attrs:{id:"_2-组件通讯"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件通讯"}},[t._v("#")]),t._v(" 2. 组件通讯")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("父子")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("porps + emit")])]),t._v(" "),v("li",[t._v("$parent/$children、ref/$refs")])])]),t._v(" "),v("li",[v("p",[t._v("多层")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("provide + inject")])]),t._v(" "),v("li",[t._v("$attrs/$listeners")]),t._v(" "),v("li",[t._v("Vue3 "),v("code",[t._v("defineExpose + ref")])])])]),t._v(" "),v("li",[v("p",[t._v("全局")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("EventBus")])]),t._v(" "),v("li",[t._v("Vuex")])])])]),t._v(" "),v("h4",{attrs:{id:"_3-单页应用的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-单页应用的理解"}},[t._v("#")]),t._v(" 3. 单页应用的理解")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("优点")]),t._v(" "),v("th",[t._v("缺点")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("页面加载快，用户体验好，切换页面不用重新加载整个页面，避免不必要的重复渲染")]),t._v(" "),v("td",[t._v("首屏渲染耗时，因为首页就需要加载应用级别的 资源")])]),t._v(" "),v("tr",[v("td",[t._v("对服务器压力小")]),t._v(" "),v("td",[t._v("路由管理，前进后退都需要前端实现")])]),t._v(" "),v("tr",[v("td",[t._v("前后端分离，架构清晰")]),t._v(" "),v("td",[t._v("SEO 难度大（顺带一提自己做过官网vue项目的seo，一个plugin，可分包，打包成多页）")])])])]),t._v(" "),v("h4",{attrs:{id:"_4-vue项目权限设计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue项目权限设计"}},[t._v("#")]),t._v(" 4. vue项目权限设计？")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("分类")]),t._v(" "),v("th",[t._v("页面权限")]),t._v(" "),v("th",[t._v("按钮权限")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("实现")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("自定义指令")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td")])])]),t._v(" "),v("h4",{attrs:{id:"_5-vue-和-react-的区别-各自的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-vue-和-react-的区别-各自的优缺点"}},[t._v("#")]),t._v(" 5. Vue 和 React 的区别？各自的优缺点？")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("类别")]),t._v(" "),v("th",[t._v("Vue")]),t._v(" "),v("th",[t._v("React")])])]),t._v(" "),v("tbody",[v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td")])])]),t._v(" "),v("h4",{attrs:{id:"_6-vue-性能优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-vue-性能优化"}},[t._v("#")]),t._v(" 6. "),v("strong",[t._v("vue 性能优化")])]),t._v(" "),v("ol",[v("li",[v("p",[t._v("代码优化")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("keep-alive")])]),t._v(" "),v("li",[v("p",[t._v("tree-shaking")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("优化关键渲染路径")]),t._v("（减少重绘重排）")])])])]),t._v(" "),v("li",[v("p",[t._v("资源加载")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("字体图标")])]),t._v(" "),v("li",[v("p",[t._v("压缩图片大小")])]),t._v(" "),v("li",[v("p",[t._v("与服务端配合，利用"),v("strong",[t._v("浏览器缓存")]),t._v("机制")])]),t._v(" "),v("li",[v("p",[t._v("静态资源cdn")])]),t._v(" "),v("li",[v("p",[t._v("js和css的加载等，css放头部，js放底部")])]),t._v(" "),v("li",[v("p",[t._v("gzip")])]),t._v(" "),v("li",[v("p",[t._v("减少网络请求")])])])]),t._v(" "),v("li",[v("p",[t._v("页面优化")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("图片懒加载")])]),t._v(" "),v("li",[v("p",[t._v("虚拟列表")])]),t._v(" "),v("li",[v("p",[t._v("路由懒加载")])]),t._v(" "),v("li",[v("p",[t._v("骨架屏")])]),t._v(" "),v("li",[v("p",[t._v("loading动画")])])])])]),t._v(" "),v("h3",{attrs:{id:"二、-生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、-生命周期"}},[t._v("#")]),t._v(" 二、 生命周期")]),t._v(" "),v("h4",{attrs:{id:"_1-vue2-vue3-生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue2-vue3-生命周期"}},[t._v("#")]),t._v(" 1. Vue2 / Vue3 生命周期？")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("Vue2")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("Vue3")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("beforeCreated、created")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("setup")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("...")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("...")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("destoryed相关")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("onUnmounted")])])])]),t._v(" "),v("h4",{attrs:{id:"_2-父子组件生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-父子组件生命周期"}},[t._v("#")]),t._v(" 2. 父子组件生命周期？")]),t._v(" "),v("blockquote",[v("p",[t._v("记住一句话： "),v("code",[t._v("父子子父")])])]),t._v(" "),v("ul",[v("li",[t._v("挂载，更新，销毁三个类型都是按照"),v("code",[t._v("父子子父")]),t._v("执行")])]),t._v(" "),v("h4",{attrs:{id:"_3-created-和-mounted-的区别-哪个声明周期请求异步数据较好"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-created-和-mounted-的区别-哪个声明周期请求异步数据较好"}},[t._v("#")]),t._v(" 3. created 和 mounted 的区别？哪个声明周期请求异步数据较好？")]),t._v(" "),v("ul",[v("li",[t._v("created")]),t._v(" "),v("li",[t._v("此时数据已经加载完毕，可以更快获取服务端数据，减少页面渲染时间，提升用户体验")]),t._v(" "),v("li",[t._v("SSR项目没有mount 相关的生命周期，提高统一性")])]),t._v(" "),v("h4",{attrs:{id:"_4-keep-alive-组件的声明周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-keep-alive-组件的声明周期"}},[t._v("#")]),t._v(" 4. keep-alive 组件的声明周期？")]),t._v(" "),v("ul",[v("li",[t._v("deactivated")]),t._v(" "),v("li",[t._v("activated")])]),t._v(" "),v("h3",{attrs:{id:"三、-原理题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、-原理题"}},[t._v("#")]),t._v(" 三、 原理题")]),t._v(" "),v("h4",{attrs:{id:"_1-vue-响应式原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue-响应式原理"}},[t._v("#")]),t._v(" "),v("strong",[t._v("1. Vue 响应式原理？？？")])]),t._v(" "),v("ul",[v("li",[t._v("依赖收集")]),t._v(" "),v("li",[t._v("派发更新")])]),t._v(" "),v("p",[v("img",{attrs:{src:"http://caibaojian.com/vue/images/data.png",alt:""}})]),t._v(" "),v("p",[t._v("把一个普通 Javascript 对象传给 Vue 实例的 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("在组件渲染（"),v("code",[t._v("render")]),t._v("）的时候，会读取（touch）data 中的数据，触发 "),v("code",[t._v("getter")]),t._v("，进而让 watcher 收集依赖")])]),t._v(" "),v("li",[v("p",[t._v("在修改数据的时候，会触发数据的 "),v("code",[t._v("setter")]),t._v("，进而通知（"),v("code",[t._v("notify")]),t._v("）watcher 进行数据更新，watcher触发更新函数（"),v("code",[t._v("trigger re-render")]),t._v("）重新进行渲染")])])]),t._v(" "),v("h4",{attrs:{id:"_2-vue-双向绑定的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue-双向绑定的理解"}},[t._v("#")]),t._v(" 2. vue 双向绑定的理解")]),t._v(" "),v("ul",[v("li",[t._v("what：双绑指的是 "),v("code",[t._v("v-model")]),t._v(" 这个指令，用于绑定一个动态值到视图中，实质上是一个语法糖，相当于 "),v("code",[t._v(":value")]),t._v(" 和 "),v("code",[t._v("@input/@change")])]),t._v(" "),v("li",[t._v("why：可读性好，提高开发效率")]),t._v(" "),v("li",[t._v("where：常用于表单中")])]),t._v(" "),v("h4",{attrs:{id:"_3-keep-alive-组件原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-keep-alive-组件原理"}},[t._v("#")]),t._v(" 3. keep-alive 组件原理")]),t._v(" "),v("h4",{attrs:{id:"_4-nexttick-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-nexttick-原理"}},[t._v("#")]),t._v(" 4. $nextTick 原理")]),t._v(" "),v("h4",{attrs:{id:"_5-diff-算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-diff-算法"}},[t._v("#")]),t._v(" 5. diff 算法")]),t._v(" "),v("ol",[v("li",[t._v("概念和目的：\nDiff 算法是一种对比算法，通过对比新旧虚拟dom，精准快速的找出dom变化，提高更新效率。")]),t._v(" "),v("li",[t._v("策略：\n"),v("code",[t._v("同层比较")]),t._v("、"),v("code",[t._v("深度优先")]),t._v("、"),v("code",[t._v("O(n)")]),t._v("\n同层比较将时间复杂度由"),v("code",[t._v("O(n^3)")]),t._v("降至"),v("code",[t._v("O(n)")])]),t._v(" "),v("li",[t._v("时机：\n响应式数据变化时，重新生成render函数，生成新的虚拟dom，新旧虚拟dom执行patch函数从而进行diff算法")]),t._v(" "),v("li",[t._v("过程：")])]),t._v(" "),v("h5",{attrs:{id:"vue2-diff-双端比较"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue2-diff-双端比较"}},[t._v("#")]),t._v(" vue2 diff（双端比较）")]),t._v(" "),v("blockquote",[v("p",[t._v("核心Diff算法（"),v("strong",[t._v("双指针")]),t._v("）")])]),t._v(" "),v("ol",[v("li",[t._v("前前")]),t._v(" "),v("li",[t._v("后后")]),t._v(" "),v("li",[t._v("前后")]),t._v(" "),v("li",[t._v("后前")])]),t._v(" "),v("h5",{attrs:{id:"vue3-diff-快速比较"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue3-diff-快速比较"}},[t._v("#")]),t._v(" vue3 diff（快速比较）")]),t._v(" "),v("ol",[v("li",[t._v("比较新旧节点类型(tag)：不同则直接替换，相同则更新属性(props)")]),t._v(" "),v("li",[t._v("比较新旧子节点情况(四种)\n"),v("ul",[v("li",[t._v("都是文本节点：直接替换")]),t._v(" "),v("li",[t._v("新有子节点旧无子节点：添加")]),t._v(" "),v("li",[t._v("新无旧有：删除")]),t._v(" "),v("li",[t._v("新旧都有：updateChildren"),v("code",[t._v("（核心diff算法）")])])])])]),t._v(" "),v("blockquote",[v("p",[t._v("核心Diff算法")])]),t._v(" "),v("ol",[v("li",[t._v("自前向后")]),t._v(" "),v("li",[t._v("自后向前")]),t._v(" "),v("li",[t._v("新节点多于旧节点(新增)")]),t._v(" "),v("li",[t._v("少于(删除)")]),t._v(" "),v("li",[t._v("乱序比较**(最长递增子序列)**")])]),t._v(" "),v("blockquote",[v("p",[t._v("vue3 diff 优化")])]),t._v(" "),v("ol",[v("li",[t._v("编译时\n"),v("code",[t._v("patchFlags")]),t._v(" :用于标记动态节点的类型\n"),v("code",[t._v("Block")]),t._v(" :相当于普通节点加了 dynamicChildrens 属性，会收集节点本身和所有动态子节点")]),t._v(" "),v("li",[t._v("运行时\n"),v("code",[t._v("最长递增子序列")]),t._v("：确定不用移动的最长序列，减少diff过程中的操作次数")])]),t._v(" "),v("h4",{attrs:{id:"_6-v-for-为什么要加key"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-v-for-为什么要加key"}},[t._v("#")]),t._v(" 6. v-for 为什么要加key")]),t._v(" "),v("h4",{attrs:{id:"_7-为什么要使用虚拟dom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-为什么要使用虚拟dom"}},[t._v("#")]),t._v(" 7. 为什么要使用虚拟DOM？")]),t._v(" "),v("ul",[v("li",[t._v("保证性能的下限")])]),t._v(" "),v("h4",{attrs:{id:"_8-template-到-render-的过程-模板编译原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-template-到-render-的过程-模板编译原理"}},[t._v("#")]),t._v(" 8. template 到 render 的过程 / 模板编译原理")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("compile")]),t._v(" "),v("p",[t._v("解析(template => ast) => 优化(patchFlag/cacheHandlers/hoistStatic) => 生成(ast => render)")]),t._v(" "),v("p",[t._v("parse => optimize => generate")])])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" parse\n  "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 以 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" 开头\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素开始标签\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素结束标签\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 注释\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 文档声明 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOCTYPE")]),t._v(" html"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 不以 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" 开头\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 文本节点\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 插值表达式 "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" optimize\n  "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" patchFlag\n  "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" cacheHandlers\n  "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" hoistStatic\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" generate\n")])])]),v("h3",{attrs:{id:"四、-vue-router"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、-vue-router"}},[t._v("#")]),t._v(" 四、 vue-router")]),t._v(" "),v("h4",{attrs:{id:"_1-路由的history-和-hash-模式-区别-实现原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-路由的history-和-hash-模式-区别-实现原理"}},[t._v("#")]),t._v(" 1. 路由的history 和 hash 模式？区别？实现原理？")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("mode：hash | history")])]),t._v(" "),v("li",[v("p",[t._v("区别")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("hash")]),t._v(" 模式带 '#'号")]),t._v(" "),v("li",[v("code",[t._v("hash")]),t._v(" 模式url变化会刷新页面，"),v("code",[t._v("history")]),t._v(" 模式不会")]),t._v(" "),v("li",[v("code",[t._v("hash")]),t._v(" 模式下,#后面的内容不会发到服务器，服务器配置无需修改；"),v("code",[t._v("history")]),t._v(" 模式需要修改服务器配置(nginx "),v("code",[t._v("try_files")]),t._v(")，否则就"),v("code",[t._v("404")])])])]),t._v(" "),v("li",[v("p",[t._v("实现")]),t._v(" "),v("ul",[v("li",[t._v("hash\n"),v("ul",[v("li",[t._v("hashChange")])])]),t._v(" "),v("li",[t._v("history\n"),v("ul",[v("li",[t._v("pushState: 在历史栈中增加一条新数据")]),t._v(" "),v("li",[t._v("replaceState：替换一条数据")]),t._v(" "),v("li",[t._v("window.onpopstate: 可监听到浏览器的前进后退，history.go / back / forword 三个方法")])])])])])]),t._v(" "),v("h4",{attrs:{id:"_2-从0实现一个vue-router"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-从0实现一个vue-router"}},[t._v("#")]),t._v(" 2. 从0实现一个vue-router")]),t._v(" "),v("p",[v("RouterLink",{attrs:{to:"/knowledge/project/mini-router4.html"}},[t._v("mini-vueRouter")])],1),t._v(" "),v("p",[v("a",{attrs:{href:"https://github.com/WillianLiusHao/single-routers",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),v("OutboundLink")],1)]),t._v(" "),v("h3",{attrs:{id:"五、-vue-x"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、-vue-x"}},[t._v("#")]),t._v(" 五、 vue-x")]),t._v(" "),v("h4",{attrs:{id:"_1-action-和-mutation"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-action-和-mutation"}},[t._v("#")]),t._v(" 1. action 和 mutation")]),t._v(" "),v("h3",{attrs:{id:"六、vue3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、vue3"}},[t._v("#")]),t._v(" 六、vue3")]),t._v(" "),v("h4",{attrs:{id:"_1-vue3-对比vue2-优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue3-对比vue2-优化"}},[t._v("#")]),t._v(" 1. vue3 对比vue2 优化")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("架构/代码优化")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("monorepo 包管理方式")])]),t._v(" "),v("li",[v("code",[t._v("ts 支持")])]),t._v(" "),v("li",[v("code",[t._v("体积优化")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("移除冷门api")]),t._v("(filter,sync,$set,$get等)")]),t._v(" "),v("li",[v("code",[t._v("tree-shaking")]),t._v(": 使用了 esmodule，tree-shaking 依赖于 es6模块的静态结构特性")])])])])]),t._v(" "),v("li",[v("p",[t._v("性能优化")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("响应式")]),t._v("：proxy 和 Reflect 替代 defineProperty")]),t._v(" "),v("li",[v("code",[t._v("diff优化")]),t._v("：更新类型标记 "),v("strong",[t._v("patchFlag")]),t._v("，对比流程使用"),v("strong",[t._v("最长递增子序列")])]),t._v(" "),v("li",[v("code",[t._v("编译优化")]),t._v("：函数缓存 "),v("strong",[t._v("cacheHandlers")]),t._v("，静态节点提升 "),v("strong",[t._v("hoistStatic")])])])]),t._v(" "),v("li",[v("p",[t._v("语法API")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("composition API")])]),t._v(" "),v("li",[v("code",[t._v("Teleport")])]),t._v(" "),v("li",[v("code",[t._v("Fragments")])])])])]),t._v(" "),v("h4",{attrs:{id:"_2-vue3-响应式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue3-响应式"}},[t._v("#")]),t._v(" 2. vue3 响应式")]),t._v(" "),v("ul",[v("li",[t._v("defineProperty 和 Proxy")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("defineProperty")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("Proxy")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("监听对象属性")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("代理整个对象")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("不可监听对象增删")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("可以")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("需循环迭代对象属性")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("惰性响应式")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("不支持map、set等数据结构")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("支持")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("兼容性好")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("兼容性差")])])])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("proxy 惰性响应式")])]),t._v(" "),v("li",[v("p",[t._v("Reflect")])]),t._v(" "),v("li",[v("p",[t._v("对数组的处理")])]),t._v(" "),v("li",[v("p",[t._v("对 set、map 的处理")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);