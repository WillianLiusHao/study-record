(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{218:function(v,_,l){"use strict";l.r(_);var i=l(6),t=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"infinite-project"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#infinite-project"}},[v._v("#")]),v._v(" infinite-project")]),v._v(" "),_("h2",{attrs:{id:"lightning"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#lightning"}},[v._v("#")]),v._v(" lightning")]),v._v(" "),_("p",[_("code",[v._v("Vue2 + Element-Ui + low-code")])]),v._v(" "),_("ol",[_("li",[_("ul",[_("li",[v._v("编辑页的设计，组件的设计，单向数据流？")])])]),v._v(" "),_("li",[_("ul",[_("li",[_("p",[v._v("jssdk：事件上报 / 错误监控 / 行为回溯")]),v._v(" "),_("ul",[_("li",[v._v("错误监控\n"),_("ul",[_("li",[v._v("脚本执行报错\n"),_("ul",[_("li",[v._v("报错信息")]),v._v(" "),_("li",[v._v("报错次数")]),v._v(" "),_("li",[v._v("设备类型(android / ios)")])])]),v._v(" "),_("li",[v._v("资源加载报错\n"),_("ul",[_("li",[v._v("资源的地址")]),v._v(" "),_("li",[v._v("资源的类型")]),v._v(" "),_("li",[v._v("报错次数")])])]),v._v(" "),_("li",[v._v("接口请求报错\n"),_("ul",[_("li",[v._v("接口地址")]),v._v(" "),_("li",[v._v("页面加载速度")])])])])])])]),v._v(" "),_("li",[_("p",[v._v("事件上报")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("活动页关键节点埋点")]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[v._v("  "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 定义一套固定的事件列表，每个组件通过可视化选择上报事件")]),v._v("\n")])])])]),v._v(" "),_("li",[_("p",[v._v("桑基图回溯")])])])]),v._v(" "),_("li",[_("p",[v._v("行为回溯")]),v._v(" "),_("ul",[_("li",[v._v("录屏")])])])])]),v._v(" "),_("li",[_("ul",[_("li",[_("p",[v._v("[x] 权限设计")])]),v._v(" "),_("li",[_("p",[v._v("登录权限(单点登录)")])]),v._v(" "),_("li",[_("p",[v._v("页面权限(路由控制)")]),v._v(" "),_("ul",[_("li",[v._v("后端数据库存对应用户的路由权限，然后在全局的路由守卫中对页面进行过滤")])])]),v._v(" "),_("li",[_("p",[v._v("功能权限("),_("code",[v._v("自定义指令 v-auth")]),v._v(")")])])])]),v._v(" "),_("li",[_("ul",[_("li",[_("p",[v._v("[x] husky（配置git 提供的提交时生命周期，限制提交的"),_("code",[v._v("分支")]),v._v("/"),_("code",[v._v("文件夹")]),v._v("）")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("husky")]),v._v(" - "),_("code",[v._v("hooks")])]),v._v(" "),_("ul",[_("li",[v._v("post-checkout")]),v._v(" "),_("li",[v._v("pre-commit")]),v._v(" "),_("li",[v._v("commit-msg")])])]),v._v(" "),_("li",[_("p",[v._v("child_process - "),_("code",[v._v("spawn")]),v._v("：命令行执行库")])]),v._v(" "),_("li",[_("p",[v._v("chalk：输出带颜色的log")])]),v._v(" "),_("li",[_("p",[v._v("process：进程控制")])])])]),v._v(" "),_("li",[_("ul",[_("li",[_("p",[v._v("[x] 脚本（"),_("strong",[v._v("建议单独写个小项目作为开发cli工具,涉及vue 的工作原理")]),v._v("）")])]),v._v(" "),_("li",[_("p",[v._v("打包模板 yarn template")])]),v._v(" "),_("li",[_("p",[v._v("启动模板 yarn serve")])]),v._v(" "),_("li",[_("p",[v._v("打包项目 yarn build")])])])]),v._v(" "),_("li",[_("ul",[_("li",[_("p",[v._v("性能优化")])]),v._v(" "),_("li",[_("p",[_("strong",[_("code",[v._v("性能优化常见手段")])])])]),v._v(" "),_("li",[_("p",[_("strong",[_("code",[v._v("首屏优化： 关键渲染路径")])])]),v._v(" "),_("ul",[_("li",[v._v("懒加载，预加载，代码压缩gzip")]),v._v(" "),_("li",[v._v("性能优化指标（FP,FCP,LCP）")])])])])])]),v._v(" "),_("p",[_("strong",[v._v("难点/亮点")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("组件开发设计、组件数据处理（数据流问题）")]),v._v(" "),_("ul",[_("li",[v._v("组件的分类\n"),_("ul",[_("li",[v._v("全局组件")]),v._v(" "),_("li",[v._v("业务组件\n"),_("ul",[_("li",[v._v("主体展示")]),v._v(" "),_("li",[v._v("配置编辑器")]),v._v(" "),_("li",[v._v("样式编辑器")])])]),v._v(" "),_("li",[v._v("样式组件")])])])])]),v._v(" "),_("li",[_("p",[v._v("模板配置的变化追踪")]),v._v(" "),_("ul",[_("li",[v._v("对象的变化\n"),_("ul",[_("li",[v._v("增")]),v._v(" "),_("li",[v._v("删")]),v._v(" "),_("li",[v._v("改")])])]),v._v(" "),_("li",[v._v("数组的变化\n"),_("ul",[_("li",[v._v("数组长度变化")]),v._v(" "),_("li",[v._v("数组增删")])])])])]),v._v(" "),_("li",[_("p",[v._v("一次性能优化")]),v._v(" "),_("ul",[_("li",[v._v("优化 pdf和弹层组件（体积大大缩小）\n"),_("ul",[_("li",[v._v("pdf（展示的时候才进行转化和渲染）")]),v._v(" "),_("li",[v._v("弹层组件（按需加载）")])])])])])]),v._v(" "),_("h2",{attrs:{id:"desktop-micro"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#desktop-micro"}},[v._v("#")]),v._v(" desktop-micro")]),v._v(" "),_("p",[_("code",[v._v("Qiankun + Monorepo + Vue3 + Tsx + Element-Plus")])]),v._v(" "),_("ol",[_("li",[_("ul",[_("li",[_("p",[v._v("Monorepo")])]),v._v(" "),_("li",[_("p",[v._v("优点")]),v._v(" "),_("ul",[_("li",[v._v("易于代码复用：所有项目代码集中于单一仓库，易于抽离出共用的业务组件或工具")]),v._v(" "),_("li",[v._v("易于依赖管理：依赖版本统一管理")])])]),v._v(" "),_("li",[_("p",[v._v("workspace")]),v._v(" "),_("ul",[_("li",[v._v("避免重复安装包，减少了磁盘空间的占用，并降低了构建时间；")]),v._v(" "),_("li",[v._v("内部代码可以彼此相互引用")])])]),v._v(" "),_("li",[_("p",[v._v("配置")]),v._v(" "),_("ul",[_("li",[v._v("根目录 package.json\n"),_("ul",[_("li",[_("code",[v._v("workspaces")]),v._v(" 字段，定义哪个目录下为子项目")]),v._v(" "),_("li",[_("code",[v._v("private => true")]),v._v("，防止误将仓库发布")])])]),v._v(" "),_("li",[v._v(".eslintrc / .stylelintrc 等配置文件 下通过,根目录配置全局的一套方案，子应用通过 "),_("code",[v._v("extends")]),v._v(" 字段获取父应用的相关配置")])])])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("项目难点、亮点")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("基础建设上（组件的二次封装）")]),v._v(" "),_("ul",[_("li",[v._v("table 组件（保证通用性前提下的简易性设计，"),_("code",[v._v("个性化和通用性")]),v._v(" 两者的权衡）\n"),_("ul",[_("li",[v._v("props: fields（搜索） / columns（表格列） / toolbar（拓展操作） / paging（分页） / api（数据获取）")]),v._v(" "),_("li",[v._v("event: "),_("code",[v._v("列排序")]),v._v(" / "),_("code",[v._v("展开行")]),v._v(" / "),_("code",[v._v("展开行二次排序")])])])]),v._v(" "),_("li",[v._v("搜索条件组件\n"),_("ul",[_("li",[v._v("类型多样：下拉(单选/多选/分组) / 输入 / 日期 / 城市选择")]),v._v(" "),_("li",[v._v("数据预加载：把该用户下有权数据渲染到对应的组件选项中")]),v._v(" "),_("li",[v._v("通讯：组件和表单组件的结合，怎么通讯更合适")])])])])]),v._v(" "),_("li",[_("p",[v._v("业务上")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("复杂度高（融合了公司核心业务后台，推到8年+的产品）")])]),v._v(" "),_("li",[_("p",[v._v("数据量大（百万级别）")])]),v._v(" "),_("li",[_("p",[v._v("功能性强（展开列/二次排序/自定义列/高级搜索等）")]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("高级搜索，动态渲染搜索表单")])]),v._v(" "),_("ul",[_("li",[v._v("描述：活动默认可搜索的字段是固定的，需要具体搜索某个字段数据的时候需要使用到")]),v._v(" "),_("li",[v._v("难点\n"),_("ul",[_("li",[v._v("渲染方面（"),_("code",[v._v("动态渲染搜索表单")]),v._v("）\n"),_("ol",[_("li",[v._v("每个项目的字段是不同的，导致"),_("code",[v._v("可搜索的字段需要动态配置")]),v._v("（全放出来太多了，有100多个字段）")]),v._v(" "),_("li",[v._v("后端存储当前项目搜索字段的配置，后端返回后，前端要"),_("code",[v._v("动态渲染搜索表单")])]),v._v(" "),_("li",[v._v("如果字段是统一类型还好，但字段分为"),_("code",[v._v("6种类型(文本框、时间范围、城市选择、下拉框、值范围)")]),v._v("，不同类型要渲染不同组件（尤其时间范围和城市选择）")])])]),v._v(" "),_("li",[v._v("传值方面（"),_("code",[v._v("数据处理")]),v._v("）\n"),_("ol",[_("li",[v._v("用户在不同类型表单组件输入值后，前端需要将值根据不同的表单类型按照不同处理方式，然后拼接上字段类型传给后端")])])])])])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("自定义列，动态渲染表格列")])]),v._v(" "),_("ul",[_("li",[v._v("描述：表格会有默认的所有项目都存在的列字段，用户可以自定义要展示的列")]),v._v(" "),_("li",[v._v("难点\n"),_("ol",[_("li",[v._v("字段不固定：列字段是后端返回的，不是固定的数据字典（不同项目活动字段不同）")]),v._v(" "),_("li",[v._v("字段渲染：配置好要展示的列后，列要怎么渲染是个头疼的问题\n"),_("ul",[_("li",[v._v("将常规字段按照字段类型定义了内容渲染规则")]),v._v(" "),_("li",[v._v("对所有特殊字段写了一份渲染规则")])])]),v._v(" "),_("li",[v._v("字段排序？存储？\n"),_("ul",[_("li",[v._v("通过 sortable拖拽排序")]),v._v(" "),_("li",[v._v("存储在 localstorage")])])]),v._v(" "),_("li",[v._v("列宽问题(渲染内容过长，不美观)\n"),_("ul",[_("li",[v._v("处理完列数据后，在重新渲染表格的时候，遍历表格内容，获取字段列中最长的内容（根据中英文和数字分别计算长度，进而控制列宽）")])])])])])])])])])])])])]),v._v(" "),_("li",[_("p",[v._v("复杂的权限设计（主应用控制，进入主应用后，获取用户角色和权限列表和数据列表，过滤路由列表只渲染特定的页面和限制接口数据）")]),v._v(" "),_("ul",[_("li",[v._v("应用权限\n"),_("ul",[_("li",[v._v("页面权限\n"),_("ul",[_("li",[v._v("由用户的角色权限决定\n"),_("ul",[_("li",[v._v("path")]),v._v(" "),_("li",[v._v("code")]),v._v(" "),_("li",[v._v("level")])])])])]),v._v(" "),_("li",[v._v("功能权限\n"),_("ul",[_("li",[v._v("自定义指令")])])])])]),v._v(" "),_("li",[v._v("数据权限")])])])]),v._v(" "),_("p",[_("strong",[v._v("Q&A")])]),v._v(" "),_("blockquote",[_("p",[v._v("Q1：Why not Iframe？\n"),_("a",{attrs:{href:"https://www.yuque.com/kuitos/gky7yw/gesexv",target:"_blank",rel:"noopener noreferrer"}},[v._v("Why Not Iframe？"),_("OutboundLink")],1)])]),v._v(" "),_("blockquote",[_("p",[v._v("Q2：复杂的权限设计？")])]),v._v(" "),_("p",[v._v("分两大模块")]),v._v(" "),_("ul",[_("li",[v._v("应用权限")]),v._v(" "),_("li",[v._v("数据权限（贯穿所有应用，以企业为维度，不同的项目运营同学只看自己项目的数据）")])]),v._v(" "),_("p",[v._v("用户的权限取决于角色的权限，角色的权限由树状结构存储(path,code,level)")]),v._v(" "),_("p",[v._v("路由由主应用控制，当请求获取到对应用户的权限后，动态渲染菜单")]),v._v(" "),_("blockquote",[_("p",[v._v("Q3：讲一下为什么用微前端，qiankun的特性是什么，和其他微前端框架对比？")])]),v._v(" "),_("p",[_("strong",[v._v("微前端架构")])]),v._v(" "),_("ul",[_("li",[v._v("HTML entry")]),v._v(" "),_("li",[v._v("沙箱\n"),_("ul",[_("li",[v._v("js 沙箱隔离")]),v._v(" "),_("li",[v._v("css 样式隔离")])])]),v._v(" "),_("li",[v._v("应用间通信")]),v._v(" "),_("li",[v._v("预加载")])]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("微前端框架")]),v._v(" "),_("th",[v._v("原理")]),v._v(" "),_("th",[v._v("优点")]),v._v(" "),_("th",[v._v("不足")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("qiankun(ali基于single-spa)")]),v._v(" "),_("td",[v._v("监听路由变化，渲染对应的子应用，进行挂载")]),v._v(" "),_("td",[v._v("1.单一子应用   2.子应用无法保活  3.接入适配成本高")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("wujie(tencent)")]),v._v(" "),_("td"),v._v(" "),_("td"),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("micro-app(jd)")]),v._v(" "),_("td",[_("strong",[v._v("WebComponent")]),v._v("、CustomElement、ShadowDom")]),v._v(" "),_("td"),v._v(" "),_("td")])])]),v._v(" "),_("p",[_("a",{attrs:{href:"https://eluxjs.com/designed/micro-module.html",target:"_blank",rel:"noopener noreferrer"}},[_("strong",[v._v("微模块")]),_("OutboundLink")],1)]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("类型")]),v._v(" "),_("th",[v._v("颗粒度")]),v._v(" "),_("th",[v._v("灵活性")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("微前端")]),v._v(" "),_("td",[v._v("粗")]),v._v(" "),_("td",[v._v("低")])]),v._v(" "),_("tr",[_("td",[v._v("微模块")]),v._v(" "),_("td",[v._v("细")]),v._v(" "),_("td",[v._v("高")])])])]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("类型")]),v._v(" "),_("th",[v._v("结构")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("当前常规前端工程")]),v._v(" "),_("td",[_("code",[v._v("文件职能-功能模块")]),v._v("结构，即"),_("code",[v._v("组件、素材、状态、路由")]),v._v("等文件职能统一管理")])]),v._v(" "),_("tr",[_("td",[v._v("Elux工程")]),v._v(" "),_("td",[_("code",[v._v("功能模块-文件职能")]),v._v("结构，文件职能由功能模块自己管理")])])])]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[v._v("├─ src\n│  ├─ api                 # "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("API")]),v._v("接口管理\n│  ├─ assets              # 静态资源文件\n│  ├─ components          # 全局组件\n│  ├─ hooks               # 常用 Hooks\n│  ├─ routers             # 路由管理\n│  ├─ store               # store\n│  ├─ styles              # 全局样式\n│  ├─ utils               # 工具库\n│  ├─ views               # 项目所有页面\n│  ├─ App"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("vue             # 入口页面\n│  └─ main"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("ts             # 入口文件\n")])])]),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[v._v("src\n├── modules\n│      ├──  ModuleA\n│      │     ├── entities\n│      │     ├── assets\n│      │     ├── api\n│      │     ├── utils\n│      │     ├── language\n│      │     ├── components\n│      │     ├── views\n│      │     ├── model"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("ts\n│      │     └── index"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("ts\n│      │ \n│      ├── ModuleB\n│      ├── ModuleC\n")])])]),_("p",[_("strong",[v._v("个人理解：")])]),v._v(" "),_("ul",[_("li",[v._v("从产品上讲，微模块为了能更好的复用"),_("strong",[v._v("业务功能")]),v._v("，更便于功能的自由组合使用")]),v._v(" "),_("li",[v._v("从开发上讲，微模块聚合了某一"),_("strong",[v._v("特定的业务场景")]),v._v("功能（有单独的api,assets,utils,view等），独立自治，是可以独立运转的小系统")])]),v._v(" "),_("blockquote",[_("p",[v._v("Q4: why? 背景? 优缺点?")])]),v._v(" "),_("ul",[_("li",[v._v("业务上：为了整合公司已有的众多后台管理系统，删减遗弃的系统功能，也为了梳理业务线条，统一化系统管理")]),v._v(" "),_("li",[v._v("技术上：为了后续新系统接入，兼容不同技术的系统，同时接触全新的 ts+vue3 技术体系")])]),v._v(" "),_("blockquote",[_("p",[v._v("Q5: 说说你对monorepo的理解？他的优缺点是什么？")])]),v._v(" "),_("p",[v._v("A：传统的"),_("code",[v._v("mutirepo")]),v._v("是多项目多仓库，而"),_("code",[v._v("monorepo")]),v._v("是多项目单仓库，目前google,vue3,vite 这些知名开源项目都是采用这种方式进行管理。")]),v._v(" "),_("ul",[_("li",[v._v("mutirepo的痛点\n"),_("ul",[_("li",[v._v("代码复用：不利于 组件/工具函数/配置 的复用")]),v._v(" "),_("li",[v._v("版本管理：同一个依赖，不同项目可能用了不同版本，每个项目都需要手动依次更新")]),v._v(" "),_("li",[v._v("项目基建：CICD流程，发布部署，代码提交流程的不统一")])])])]),v._v(" "),_("h2",{attrs:{id:"eams、uni-app、小蓝书、官网"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#eams、uni-app、小蓝书、官网"}},[v._v("#")]),v._v(" eams、uni-app、小蓝书、官网")]),v._v(" "),_("p",[_("code",[v._v("Vue3 + Ts + Vite + Pinia + echarts + Tailwindcss")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("[x] 制定代码和git规范("),_("code",[v._v("standard")]),v._v(" 规范)、自动化版本管理")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("git cz => Commitlint规范化提交格式 / cz-conventional-changelog(changelog生成)")])]),v._v(" "),_("li",[_("p",[v._v("standard-version => 根据提交信息，更新版本号，打tag")])]),v._v(" "),_("li",[_("p",[v._v("代码规范(eslint检测 + vscode 插件自动格式化)")]),v._v(" "),_("ul",[_("li",[v._v("js: "),_("code",[v._v("Eslint")])]),v._v(" "),_("li",[v._v("html: "),_("code",[v._v("plugin:vue/vue3-essential")]),v._v("/"),_("code",[v._v("plugin:vue/recommended")]),v._v("、"),_("code",[v._v("@vue/standard")])]),v._v(" "),_("li",[v._v("ts: "),_("code",[v._v("@vue/typescript/recommended")])]),v._v(" "),_("li",[v._v("scss: stylelint "),_("code",[v._v("stylelint-config-standard-scss")])])])]),v._v(" "),_("li",[_("p",[v._v("git规范：格式化提交，自动化更新版本号及生成changelog")]),v._v(" "),_("ul",[_("li",[v._v("Husky(pre-commit/commit-msg/pre-push) + Lint-staged")]),v._v(" "),_("li",[v._v("Commitlint(git cz) + cz-conventional-changelog")]),v._v(" "),_("li",[v._v("standard-version：更新版本")])])])])]),v._v(" "),_("li",[_("p",[v._v("[x] "),_("strong",[v._v("echarts封装")])])]),v._v(" "),_("li",[_("p",[v._v("[x] pinia + 持久化存储("),_("code",[v._v("pinia-plugin-persistedstate")]),v._v(")")])]),v._v(" "),_("li",[_("p",[v._v("[x] 首屏加载优化")]),v._v(" "),_("ul",[_("li",[v._v("ngnix 开启gzip压缩")]),v._v(" "),_("li",[v._v("前端 "),_("code",[v._v("compression-webpack-plugin")]),v._v(" 插件压缩js和css")])])]),v._v(" "),_("li",[_("p",[v._v("[x] html2canvas pdfjs")]),v._v(" "),_("ul",[_("li",[v._v("图片如何适配pdf大小")]),v._v(" "),_("li",[_("strong",[v._v("页眉页码")])]),v._v(" "),_("li",[v._v("清晰度问题：设置缩放比例，设置设备像素比")]),v._v(" "),_("li",[_("strong",[v._v("！！分页处理")]),v._v(" "),_("ul",[_("li",[v._v("先将长图统一转成canvas")]),v._v(" "),_("li",[v._v("然后通过固定的A4纸宽高（减去页眉页码），"),_("code",[v._v("新创建一个canvas")]),v._v("，用于"),_("code",[v._v("绘制当前页面的canvas")])]),v._v(" "),_("li",[v._v("通过宽高和原始的canvas数据，对新创建的canvas进行数据填充")]),v._v(" "),_("li",[v._v("一页页绘制")])])]),v._v(" "),_("li",[_("strong",[v._v("！！！截断处理")]),v._v(" "),_("ul",[_("li",[v._v("获取长图的dom，在绘制当页canvas时，判断当前最后一个元素高度是否被截断，截断则将此元素放至下一页")])])]),v._v(" "),_("li",[_("strong",[v._v("浏览器会限制最大的canvas高度(chrome: 16384px)")])])])]),v._v(" "),_("li",[_("p",[v._v("[x] 多请求下loading 的展示和关闭")]),v._v(" "),_("ul",[_("li",[v._v("通过全局的 app.vue 中全局的 loading配合 axios 拦截器实现（"),_("code",[v._v("axios 中需要增加一个请求计数器")]),v._v("=> 统计所有发出的请求数，每完成一个减一，当且仅当计数为0的时候才关闭loading）")])])]),v._v(" "),_("li",[_("p",[v._v("[x] 批量导出")]),v._v(" "),_("ul",[_("li",[v._v("服务端导出实现逻辑\n"),_("ol",[_("li",[v._v("客户端导入报表(excel)，node 接口读取关键字段")]),v._v(" "),_("li",[v._v("node 端通过 "),_("code",[v._v("puppeteer")]),v._v(" 创建浏览器，访问线上小蓝书页面，"),_("code",[v._v("通过点击事件触发导出")]),v._v("。")]),v._v(" "),_("li",[v._v("客户端配合将pdf上传至 "),_("code",[v._v("oss")]),v._v(" 服务器，生成线上链接，插入到页面中的节点属性中。")]),v._v(" "),_("li",[v._v("node 通过获取浏览器节点的属性，得到pdf链接")])])]),v._v(" "),_("li",[v._v("批量\n"),_("ul",[_("li",[v._v("promise 实现任务队列，控制并发数")])])])])]),v._v(" "),_("li",[_("p",[v._v("svg-icon 组件")]),v._v(" "),_("ul",[_("li",[v._v("use 标签")])])])]),v._v(" "),_("h2",{attrs:{id:"cms"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cms"}},[v._v("#")]),v._v(" cms")]),v._v(" "),_("ol",[_("li",[v._v("cli")]),v._v(" "),_("li",[v._v("丰富组件")]),v._v(" "),_("li",[v._v("路由自动生成（vite插件）")])])])}),[],!1,null,null,null);_.default=t.exports}}]);